immediate:

* output all necessary information to reproduce all graphs and stats drawn by python
	* fit lines in parent and height distributions, from sample data rather than histogram (hence calculated in libpumo)
	* mean and std of each distance bin, from sample data rather than histogram (hence calculated in libpumo)  
	* axis labels in distributions

* produce python code to generate all graphs and tables from libpumo data
	* projections of groups of files
	* coplots of several eg. angle distributions
	* summary plots drawing info from groups of files

* add MC verification analyses to compare topology, segment lengths, distribution used in generation between source and synthetic trees
	* factor out distribution analysis code to allow use on MCExampleAnalysis without copypaste code

* equal bin count in distributions


===========================================

analysis stack behaviour:

simplest working version (done):
replace analysis request with "everything".
update all analyses in order of declaration and save.

next simplest (done):
replace analysis request with "everything".
attempt to load all analyses in order of declaration and fail gracefully whenever a problem occurs
update all analyses where loading failed

next simplest:
replace analysis request with "everything".
attempt to load all analyses in order of declaration and fail gracefully whenever a problem occurs
update all analyses where loading failed or where any level of dependency had a failed load

next simplest:
replace analysis request with "everything".
attempt to load all analyses in order of declaration and fail gracefully whenever a problem occurs
update all analyses where loading failed, or where any level of dependency had a failed load or was out of date, or where any dependency is more recent than the analysis in question

next simplest:
acknowledge analysis request.
analyse dependencies at all levels of requested analysis and ignore others.
attempt to load analyses in order of declaration and fail gracefully whenever a problem occurs
update all analyses where loading failed, or where any level of dependency had a failed load or was out of date, or where any dependency is more recent than the analysis in question

next simplest:
acknowledge more than one analysis request per execution.
analyse dependencies at all levels of requested analysis and ignore others.
attempt to load analyses in order of declaration and fail gracefully whenever a problem occurs
update all analyses where loading failed, or where any level of dependency had a failed load or was out of date, or where any dependency is more recent than the analysis in question

===============================

analyses:

extend AxesAnalysis to calculate long axis and side axis
wrap JointDistributionAnalysis (de)serialisation to allow extra information to be recorded
reportmean, std, and unaltered segment fractions in MonteCarloAnalysis
AxisVisualisationAnalysis (unimportant)
DistanceDistributionAnalysis: exclude primary dendrite
HeightDependenceGroupAnalysis
LikelihoodRatioAnalysis (replace)
SampleMCForestAnalysis

======================================

other:

Interface with python to generate visualisations
comments
debug: test equality of serialised and deserialised json
fail gracefully when SWC files aren't found
change all floats to doubles
fix crash in Forest::samplePoints
optimise Forest::generateForest: move from map<Node*> to vector<Node*> in Forest and reduce lookup times? (require renumbering) change mChildren from vector to list? binary representation of n-ary tree?
optimise Forest::generateForest: fix nonlinear complexity in node count. < 5000 nodes takes ~1 minute, >10000 nodes takes at least 10 minutes and increases rapidly.
tag analysis update methods with dates
fix stubgen autocomments that were later falsified
tag analysis update methods with dates automagically?
date comparison
date generation
date verification
unit tests
include time taken in json
fix disagreement between libpumo (C++) and comp (python) - is one wrong, or was a sensitive parameter changed? (bin count?) requires output of example trees and possibly computation of angle distribution of generated trees.